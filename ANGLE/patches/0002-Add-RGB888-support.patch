From 663774df637895d15f893327b1585e0ec789b1a0 Mon Sep 17 00:00:00 2001
From: unknown <lfy@lfy0-w.ad.corp.google.com>
Date: Wed, 30 Mar 2016 12:03:10 -0700
Subject: [PATCH 2/3] Add RGB888 support

---
 src/libANGLE/Config.cpp                      | 9 ++++-----
 src/libANGLE/renderer/d3d/d3d9/Renderer9.cpp | 2 ++
 src/libANGLE/validationES2.cpp               | 3 ++-
 3 files changed, 8 insertions(+), 6 deletions(-)

diff --git a/src/libANGLE/Config.cpp b/src/libANGLE/Config.cpp
index 52c6453..2088d6f 100644
--- a/src/libANGLE/Config.cpp
+++ b/src/libANGLE/Config.cpp
@@ -206,19 +206,18 @@ class ConfigSorter
 
 std::vector<const Config*> ConfigSet::filter(const AttributeMap &attributeMap) const
 {
-    std::vector<const Config*> result;
+	std::vector<const Config*> result;
     result.reserve(mConfigs.size());
 
     for (auto configIter = mConfigs.begin(); configIter != mConfigs.end(); configIter++)
     {
         const Config &config = configIter->second;
         bool match = true;
-
         for (auto attribIter = attributeMap.begin(); attribIter != attributeMap.end(); attribIter++)
         {
             EGLint attributeKey = attribIter->first;
             EGLint attributeValue = attribIter->second;
-
+			
             switch (attributeKey)
             {
               case EGL_BUFFER_SIZE:               match = config.bufferSize >= attributeValue;                        break;
@@ -264,10 +263,10 @@ std::vector<const Config*> ConfigSet::filter(const AttributeMap &attributeMap) c
 
             if (!match)
             {
-                break;
+				break;
             }
         }
-
+		
         if (match)
         {
             result.push_back(&config);
diff --git a/src/libANGLE/renderer/d3d/d3d9/Renderer9.cpp b/src/libANGLE/renderer/d3d/d3d9/Renderer9.cpp
index ad6c2cc..ca558e7 100644
--- a/src/libANGLE/renderer/d3d/d3d9/Renderer9.cpp
+++ b/src/libANGLE/renderer/d3d/d3d9/Renderer9.cpp
@@ -396,6 +396,7 @@ egl::ConfigSet Renderer9::generateConfigs() const
     static const GLenum colorBufferFormats[] =
     {
 		GL_RGBA8,
+		GL_RGB8,
 
         //GL_BGR5_A1_ANGLEX,
         //GL_BGRA8_EXT,
@@ -504,6 +505,7 @@ egl::ConfigSet Renderer9::generateConfigs() const
                     config.sampleBuffers = 0; // FIXME: enumerate multi-sampling
                     config.samples = 0;
                     config.stencilSize = depthStencilBufferFormatInfo.stencilBits;
+					fprintf(stderr, "sizes (depthstencil): D %d S %d\n", config.depthSize, config.stencilSize);
                     config.surfaceType = EGL_PBUFFER_BIT | EGL_WINDOW_BIT | EGL_SWAP_BEHAVIOR_PRESERVED_BIT;
                     config.transparentType = EGL_NONE;
                     config.transparentRedValue = 0;
diff --git a/src/libANGLE/validationES2.cpp b/src/libANGLE/validationES2.cpp
index 54615a1..6d481ac 100644
--- a/src/libANGLE/validationES2.cpp
+++ b/src/libANGLE/validationES2.cpp
@@ -583,7 +583,8 @@ bool ValidateES2CopyTexImageParameters(ValidationContext *context,
             if (colorbufferFormat != GL_RGBA4 &&
                 colorbufferFormat != GL_RGB5_A1 &&
                 colorbufferFormat != GL_RGBA8_OES &&
-                colorbufferFormat != GL_RGBA32F)
+				colorbufferFormat != GL_RGB8_OES && // this works in the emulator
+				colorbufferFormat != GL_RGBA32F)
             {
 				fprintf(stderr, "ANGLE: %s: GL_RGBA/LUMINANCE_ALPHA case: wrong texture vs color bufer format (0x%x). return.\n", __FUNCTION__, colorbufferFormat);
 
-- 
1.9.5.chromium.6

